version: '3.8'

services:
  siteguard-backend:
    build: .
    container_name: siteguard-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - FRONTEND_URL=http://localhost:5173
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - DATABASE_PATH=./data/siteguard.db
    volumes:
      - ./data:/app/data
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Add Redis for caching (for production)
  # redis:
  #   image: redis:7-alpine
  #   container_name: siteguard-redis
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   restart: unless-stopped

  # Optional: Add PostgreSQL for production database
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: siteguard-postgres
  #   environment:
  #     - POSTGRES_DB=siteguard
  #     - POSTGRES_USER=siteguard
  #     - POSTGRES_PASSWORD=siteguard_password
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   restart: unless-stopped

# volumes:
#   redis_data:
#   postgres_data: 